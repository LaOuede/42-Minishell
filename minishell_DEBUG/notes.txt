//	--	Child processes	loop --
	i = -1;
	while(++i < PROC_NB)
	{
		// Create the req'd nb of childs processes (pids[i])
		pids[i] = fork();
		if (pids[i] == -1)
			printf("Something went wrong during pids[%d] process\n", i);
	
		if(pids[i] == 0)
		{
			// Close all unused pipes, in order to not leave any pipes opened for nothing
			int j;
			j = -1;
			while (++j < PROC_NB + 1)
			{
				if(i != j)
					close(pipes[j][0]);
				if(i + 1 != j)
					close(pipes[j][1]);	
			}

			int x;
			if(read(pipes[i][0], &x, sizeof(int)) == -1)
				printf("Child [%d] error : Couldn't read from the pipes[%d][0]\n", i, i);
			printf("Pipe[%d] got %d\n", i, x);

			// Incrementing x
			x++;
			
			if(write(pipes[i + 1][1], &x, sizeof(int)) == -1)
				printf("Child [%d] error : Couldn't write to the pipes[%d][1]\n", i, i);
			printf("Pipe[%d] sent %d\n", i, x);
			
			// Close used pipes
			close(pipes[i][0]);
			close(pipes[i + 1][1]);

			return(0);
		}
	}
